
# module name
MODULE_NAME = Test

# path to xcode application/toolchain
XCODE = /Applications/Xcode6-Beta6.app 

# path to android sdk
ANDROID_SDK = /Users/justin/android/sdk

# path to android ndk
ANDROID_NDK = /Users/justin/android/android-ndk-r10

# includes to add to 
OBJC_INCLUDES = -I$(XCODE)/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.1.sdk/usr/include \
				-I$(XCODE)/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk/usr/include \
				-F$(XCODE)/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk/System/Library/Frameworks
SWIFT_INCLUDES = -Xcc -I.
SYSROOT = .

# built in symbols
INTRINSIC_SYMBOLS = \
	PRIMARY_FILE \
	TARGET \
	SOURCE \
	SWIFT_SOURCES 

# options for compiling objective-c -> LLVM-IR
OBJC = $(XCODE)/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang \
	-x objective-c++ \
	-arch armv7 \
	-c $(SOURCE) \
	-emit-llvm \
	-fno-short-enums \
	-fPIC \
	-isysroot $(SYSROOT) \
	-D_POSIX_C_SOURCE \
	-DANDROID \
	$(OBJC_INCLUDES) \
	-o $(TARGET) \
	-S

# options for compiling objective-c++ -> LLVM-IR
OBJC_C++ = $(OBJC) -std=c++11

# options for compiling swift -> LLVM-IR
SWIFT_CC = $(XCODE)/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift \
	-frontend \
	-c \
	-enable-objc-attr-requires-objc-module \
	-target armv7-apple-ios7.0 \
	-target-cpu cortex-a8 \
	-target-abi apcs-gnu \
	-module-name $(MODULE_NAME) \
	-sdk /Applications/Xcode6-Beta5.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS8.0.sdk \
	-emit-ir \
	-o $(TARGET) \
	-primary-file $(SOURCE) \
	$(SWIFT_SOURCES)

# LLVM-IR -> .o compiler
ANDROID_LLC = $(ANDROID_NDK)/toolchains/llvm-3.4/prebuilt/darwin-x86_64/bin/llc --filetype=obj -mtriple=arm -relocation-model=pic -o $(TARGET) $(SOURCE)

# android linker
ANDROID_LD = $(ANDROID_NDK)/toolchains/arm-linux-androideabi-4.8/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-gcc-4.8



